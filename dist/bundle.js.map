{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://routerenderer/./src/index.ts","webpack://routerenderer/./src/modules/projection.ts","webpack://routerenderer/./src/modules/renderer.ts","webpack://routerenderer/./src/modules/renderer/buffers.ts","webpack://routerenderer/./src/modules/renderer/models/grid.ts","webpack://routerenderer/./src/modules/renderer/models/path.ts","webpack://routerenderer/./src/modules/renderer/scene.ts","webpack://routerenderer/./src/modules/renderer/webgl.ts","webpack://routerenderer/./src/modules/webglOverlayView.ts","webpack://routerenderer/webpack/bootstrap","webpack://routerenderer/webpack/startup"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RouteWebGLOverlayView = exports.RouteRenderer = void 0;\nvar renderer_1 = __importDefault(require(\"./modules/renderer\"));\nexports.RouteRenderer = renderer_1.default;\nvar webglOverlayView_1 = __importDefault(require(\"./modules/webglOverlayView\"));\nexports.RouteWebGLOverlayView = webglOverlayView_1.default;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Projection = void 0;\nvar Projection = /** @class */ (function () {\n    function Projection() {\n    }\n    Projection.getTileSize = function (zoomLevel) {\n        return zoomLevel * 256;\n    };\n    ;\n    Projection.getMercatorWorldCoordinateProjection = function (zoomLevel, latitude, longitude) {\n        var tileSize = this.getTileSize(zoomLevel);\n        var latitudeToRadians = ((latitude * Math.PI) / 180);\n        var northing = Math.log(Math.tan((Math.PI / 4) + (latitudeToRadians / 2)));\n        return {\n            left: ((longitude + 180) * (tileSize / 360)),\n            top: ((tileSize / 2) - ((tileSize * northing) / (2 * Math.PI)))\n        };\n    };\n    ;\n    Projection.getPixelCoordinates = function (zoomLevel, leftWorldCoordinate, topWorldCoordinate) {\n        return {\n            left: leftWorldCoordinate * (Math.pow(2, zoomLevel)),\n            top: topWorldCoordinate * (Math.pow(2, zoomLevel))\n        };\n    };\n    ;\n    Projection.projectToPixelCoordinate = function (point, options) {\n        var _a, _b, _c;\n        var worldCoordinates = this.getMercatorWorldCoordinateProjection((_a = options.projectionZoomLevel) !== null && _a !== void 0 ? _a : 2, point.latitude, point.longitude);\n        var pixelCoordinates = this.getPixelCoordinates((_b = options.projectionZoomLevel) !== null && _b !== void 0 ? _b : 2, worldCoordinates.left, worldCoordinates.top);\n        return {\n            x: pixelCoordinates.left,\n            y: pixelCoordinates.top,\n            z: point.altitude * (((_c = options.projectionZoomLevel) !== null && _c !== void 0 ? _c : 2) / 100)\n        };\n    };\n    ;\n    return Projection;\n}());\nexports.Projection = Projection;\n;\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar projection_1 = require(\"./projection\");\nvar grid_1 = require(\"./renderer/models/grid\");\nvar path_1 = require(\"./renderer/models/path\");\nvar scene_1 = require(\"./renderer/scene\");\nvar webgl_1 = require(\"./renderer/webgl\");\nvar Renderer = /** @class */ (function () {\n    function Renderer(options) {\n        this.paths = [];\n        this.bufferers = [];\n        this.animations = null;\n        this.previousAnimationsLength = 0;\n        this.deltaX = 0;\n        this.deltaY = 0;\n        this.previous = 0;\n        this.options = options;\n        //window.requestAnimationFrame(this.render.bind(this));\n    }\n    ;\n    Renderer.prototype.setOptions = function (options) {\n        this.options = __assign(__assign({}, this.options), options);\n    };\n    ;\n    Renderer.prototype.setupContext = function (context) {\n        this.programInfo = webgl_1.RendererWebGL.initializeProgram(context);\n    };\n    ;\n    Renderer.prototype.setPaths = function (paths, animations, project, projectionFunction) {\n        var _this = this;\n        if (animations === void 0) { animations = null; }\n        if (project === void 0) { project = true; }\n        var startLeft = NaN;\n        var startTop = NaN;\n        var minimumLeft = NaN;\n        var maximumLeft = NaN;\n        var minimumTop = NaN;\n        var maximumTop = NaN;\n        var minimumAltitude = NaN;\n        var maximumAltitude = NaN;\n        for (var _i = 0, paths_1 = paths; _i < paths_1.length; _i++) {\n            var path = paths_1[_i];\n            for (var _a = 0, path_2 = path; _a < path_2.length; _a++) {\n                var coordinate = path_2[_a];\n                if (!project) {\n                    coordinate.projection = {\n                        x: coordinate.x,\n                        y: coordinate.y,\n                        z: coordinate.z\n                    };\n                }\n                else {\n                    coordinate.projection = (projectionFunction !== null && projectionFunction !== void 0 ? projectionFunction : projection_1.Projection.projectToPixelCoordinate).call(projectionFunction !== null && projectionFunction !== void 0 ? projectionFunction : projection_1.Projection, coordinate, this.options);\n                }\n                if (window.isNaN(minimumAltitude) || coordinate.projection.z < minimumAltitude)\n                    minimumAltitude = coordinate.projection.z;\n                if (window.isNaN(maximumAltitude) || coordinate.projection.z > maximumAltitude)\n                    maximumAltitude = coordinate.projection.z;\n                if (window.isNaN(startLeft))\n                    startLeft = coordinate.projection.x;\n                if (window.isNaN(startTop))\n                    startTop = coordinate.projection.y;\n                if (window.isNaN(minimumLeft) || coordinate.projection.x < minimumLeft)\n                    minimumLeft = coordinate.projection.x;\n                if (window.isNaN(maximumLeft) || coordinate.projection.x > maximumLeft)\n                    maximumLeft = coordinate.projection.x;\n                if (window.isNaN(minimumTop) || coordinate.projection.y < minimumTop)\n                    minimumTop = coordinate.projection.y;\n                if (window.isNaN(maximumTop) || coordinate.projection.y > maximumTop)\n                    maximumTop = coordinate.projection.y;\n            }\n        }\n        var centerLeft = (maximumLeft - minimumLeft) / 2;\n        var centerTop = (maximumTop - minimumTop) / 2;\n        var green = [0, 1, 0, 1];\n        var red = [1, 0, 0, 1];\n        if (this.options.keepMinimumAltitude)\n            minimumAltitude = 0;\n        this.paths = paths.map(function (path) {\n            var points = [];\n            var fullDistance = 0;\n            path.forEach(function (coordinate, index) {\n                var _a, _b, _c, _d;\n                var colorMultiplier = (coordinate.projection.z - minimumAltitude) / (maximumAltitude - minimumAltitude);\n                var x = coordinate.projection.x;\n                var y = coordinate.projection.y;\n                if (!((_a = _this.options.keepMinimumPositions) !== null && _a !== void 0 ? _a : false) && _this.options.center) {\n                    x = ((startLeft > coordinate.projection.x) ? (startLeft - coordinate.projection.x) : (coordinate.projection.x - startLeft));\n                    y = ((startTop < coordinate.projection.y) ? (startTop - coordinate.projection.y) : (coordinate.projection.y - startTop));\n                }\n                else if (!((_b = _this.options.keepMinimumPositions) !== null && _b !== void 0 ? _b : false)) {\n                    x = coordinate.projection.x - startLeft;\n                    y = startTop - coordinate.projection.y;\n                }\n                if ((_c = _this.options.center) !== null && _c !== void 0 ? _c : true) {\n                    x -= centerLeft;\n                    y += centerTop;\n                }\n                var z = (coordinate.projection.z - minimumAltitude);\n                var distanceX = (index === 0) ? (0) : (Math.abs(x - points[index - 1].x));\n                var distanceY = (index === 0) ? (0) : (Math.abs(y - points[index - 1].y));\n                var distance = Math.sqrt(Math.pow(distanceX, 2) + Math.pow(distanceY, 2));\n                var point = {\n                    x: x,\n                    y: y,\n                    z: z,\n                    distanceX: distanceX,\n                    distanceY: distanceY,\n                    distance: distance,\n                    distanceStart: fullDistance,\n                    verticles: null,\n                    color: (!_this.options.elevationGradient) ? ((_d = coordinate.color) === null || _d === void 0 ? void 0 : _d.map(function (index) { return index / 255; })) : ((_this.options.elevationGradientColors) ? ([\n                        ((_this.options.elevationGradientColors[0][0] + (_this.options.elevationGradientColors[1][0] - _this.options.elevationGradientColors[0][0]) * colorMultiplier)) / 255,\n                        ((_this.options.elevationGradientColors[0][1] + (_this.options.elevationGradientColors[1][1] - _this.options.elevationGradientColors[0][1]) * colorMultiplier)) / 255,\n                        ((_this.options.elevationGradientColors[0][2] + (_this.options.elevationGradientColors[1][2] - _this.options.elevationGradientColors[0][2]) * colorMultiplier)) / 255,\n                        ((_this.options.elevationGradientColors[0][3] + (_this.options.elevationGradientColors[1][3] - _this.options.elevationGradientColors[0][3]) * colorMultiplier)) / 255\n                    ]) : ([\n                        (green[0] + (red[0] - green[0]) * colorMultiplier),\n                        (green[1] + (red[1] - green[1]) * colorMultiplier),\n                        (green[2] + (red[2] - green[2]) * colorMultiplier),\n                        1.0\n                    ]))\n                };\n                points.push(point);\n                fullDistance += distance;\n            });\n            return {\n                points: points,\n                fullDistance: fullDistance\n            };\n        });\n        this.animations = animations;\n        this.bufferers = [];\n    };\n    ;\n    Renderer.prototype.getAnimationFrame = function (now) {\n        if (now === void 0) { now = 0; }\n        var frame = {\n            distanceFraction: 1,\n            elevationFraction: 1\n        };\n        if (this.animations) {\n            var delta = now - this.previous;\n            this.previous = now;\n            for (var index = 0; index < this.animations.length; index++) {\n                var animation = this.animations[index];\n                if (!animation.progress) {\n                    animation.progress = {\n                        elapsed: 0\n                    };\n                }\n                animation.progress.elapsed += delta;\n                var fraction = Math.max(Math.min(animation.progress.elapsed / animation.interval, 1), 0);\n                if (!animation.forwards)\n                    fraction = 1 - fraction;\n                if (fraction === ((animation.forwards) ? (1) : (0))) {\n                    if (!animation.repeat) {\n                        this.animations.splice(index, 1);\n                        index--;\n                    }\n                    else {\n                        animation.forwards = !animation.forwards;\n                        delete animation.progress;\n                    }\n                }\n                switch (animation.type) {\n                    case \"distance\": {\n                        frame.distanceFraction = fraction;\n                        break;\n                    }\n                    case \"elevation\": {\n                        frame.elevationFraction = fraction;\n                        break;\n                    }\n                }\n            }\n        }\n        return frame;\n    };\n    ;\n    Renderer.prototype.registerMouseEvents = function (canvas) {\n        var _this = this;\n        var mouseDown = false;\n        var lastMouseX = null;\n        var lastMouseY = null;\n        canvas.addEventListener(\"mousedown\", function (event) {\n            mouseDown = true;\n            lastMouseX = event.pageX;\n            lastMouseY = event.pageY;\n        });\n        document.body.addEventListener(\"mouseup\", function (event) {\n            mouseDown = false;\n        });\n        document.body.addEventListener(\"mousemove\", function (event) {\n            if (!mouseDown || lastMouseX === null || lastMouseY === null) {\n                return;\n            }\n            var newX = event.pageX;\n            var newY = event.pageY;\n            _this.deltaX += newX - lastMouseX;\n            _this.deltaY += newY - lastMouseY;\n            lastMouseX = newX;\n            lastMouseY = newY;\n        });\n    };\n    ;\n    Renderer.prototype.render = function (context, now, matrix) {\n        var _a, _b, _c, _d;\n        if (!this.programInfo)\n            throw new Error(\"Program info is not set up yet, you must call setupContext before rendering!\");\n        var animations = (_b = (_a = this.animations) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0;\n        if (this.bufferers.length !== this.paths.length || ((_c = this.animations) === null || _c === void 0 ? void 0 : _c.length) || ((_d = this.animations) === null || _d === void 0 ? void 0 : _d.length) !== this.previousAnimationsLength)\n            this.bufferers = this.createBuffers(context, now);\n        scene_1.RendererScene.drawScene(context, this.programInfo, this.bufferers, this.options, {\n            x: this.deltaX,\n            y: this.deltaY\n        }, matrix);\n        this.previousAnimationsLength = animations;\n        //window.requestAnimationFrame((now) => this.render(now, animations));\n    };\n    ;\n    Renderer.prototype.createBuffers = function (context, now) {\n        var _this = this;\n        var buffers = [];\n        var animationFrame = this.getAnimationFrame(now);\n        buffers.push.apply(buffers, this.paths.map(function (path) { return path_1.RendererPathModel.createBuffers(context, path, _this.options, animationFrame); }));\n        if (this.options.grid)\n            buffers.push(grid_1.RendererGridModel.createBuffers(context, this.options, animationFrame, this.paths));\n        return buffers;\n    };\n    ;\n    return Renderer;\n}());\nexports.default = Renderer;\n;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RendererBuffers = void 0;\nvar RendererBuffers = /** @class */ (function () {\n    function RendererBuffers() {\n    }\n    RendererBuffers.initPositionBuffer = function (gl, positions) {\n        // Create a buffer for the square's positions.\n        var positionBuffer = gl.createBuffer();\n        // Select the positionBuffer as the one to apply buffer\n        // operations to from here out.\n        gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n        // Now pass the list of positions into WebGL to build the\n        // shape. We do this by creating a Float32Array from the\n        // JavaScript array, then use it to fill the current buffer.\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\n        return positionBuffer;\n    };\n    RendererBuffers.initColorBuffer = function (gl, faceColors) {\n        // Convert the array of colors into a table for all the vertices.\n        var colors = [];\n        for (var j = 0; j < faceColors.length; ++j) {\n            var c = faceColors[j];\n            // Repeat each color four times for the four vertices of the face\n            colors = colors.concat(c, c, c, c);\n        }\n        var colorBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, colorBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(colors), gl.STATIC_DRAW);\n        return colorBuffer;\n    };\n    RendererBuffers.initIndexBuffer = function (gl, indices) {\n        var indexBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);\n        // This array defines each face as two triangles, using the\n        // indices into the vertex array to specify each triangle's\n        // position.\n        // Now send the element array to GL\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW);\n        return indexBuffer;\n    };\n    return RendererBuffers;\n}());\nexports.RendererBuffers = RendererBuffers;\n;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RendererGridModel = void 0;\nvar buffers_1 = require(\"../buffers\");\nvar RendererGridModel = /** @class */ (function () {\n    function RendererGridModel() {\n    }\n    RendererGridModel.createBuffers = function (gl, options, animationFrame, paths) {\n        var _a, _b, _c;\n        var minX = NaN;\n        var maxX = NaN;\n        var minY = NaN;\n        var maxY = NaN;\n        for (var _i = 0, paths_1 = paths; _i < paths_1.length; _i++) {\n            var path = paths_1[_i];\n            for (var _d = 0, _e = path.points; _d < _e.length; _d++) {\n                var point = _e[_d];\n                if (window.isNaN(minX) || point.x < minX)\n                    minX = point.x;\n                if (window.isNaN(maxX) || point.x > maxX)\n                    maxX = point.x;\n                if (window.isNaN(minY) || point.y < minY)\n                    minY = point.y;\n                if (window.isNaN(maxY) || point.y > maxY)\n                    maxY = point.y;\n            }\n        }\n        var padding = (_a = options.gridPadding) !== null && _a !== void 0 ? _a : 1;\n        var positions = [\n            minY - padding,\n            -0.002,\n            maxX + padding,\n            maxY + padding,\n            -0.002,\n            maxX + padding,\n            maxY + padding,\n            -0.002,\n            minX - padding,\n            minY - padding,\n            -0.002,\n            minX - padding // back left X\n        ];\n        var faceColors = [\n            (_c = (_b = options.gridColor) === null || _b === void 0 ? void 0 : _b.map(function (index) { return index / 255; })) !== null && _c !== void 0 ? _c : [.5, 0, 0, 1]\n        ];\n        var indices = [\n            0, 1, 2,\n            0, 2, 3, // bottom\n        ];\n        var positionBuffer = buffers_1.RendererBuffers.initPositionBuffer(gl, positions);\n        var colorBuffer = buffers_1.RendererBuffers.initColorBuffer(gl, faceColors);\n        var indexBuffer = buffers_1.RendererBuffers.initIndexBuffer(gl, indices);\n        return {\n            verticles: positions.length / 2,\n            position: positionBuffer,\n            color: colorBuffer,\n            indices: indexBuffer,\n        };\n    };\n    ;\n    return RendererGridModel;\n}());\nexports.RendererGridModel = RendererGridModel;\n;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RendererPathModel = void 0;\nvar buffers_1 = require(\"../buffers\");\nvar RendererPathModel = /** @class */ (function () {\n    function RendererPathModel() {\n    }\n    RendererPathModel.createBuffers = function (gl, path, options, animationFrame) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w;\n        var positions = [];\n        var faceColors = [];\n        var indices = [];\n        var indexForIndices = 0;\n        var distance = 0;\n        var breakingPoint = path.fullDistance * animationFrame.distanceFraction;\n        for (var index = 1; index < path.points.length; index++) {\n            var from = path.points[index - 1];\n            var to = path.points[index];\n            var fromElevation = from.z * animationFrame.elevationFraction;\n            var toElevation = to.z * animationFrame.elevationFraction;\n            var pointFraction = 1.0;\n            distance = to.distanceStart;\n            var leftWallColor = (_d = (_a = to.color) !== null && _a !== void 0 ? _a : (_c = ((_b = options.leftWallColor) !== null && _b !== void 0 ? _b : options.wallColor)) === null || _c === void 0 ? void 0 : _c.map(function (index) { return index / 255; })) !== null && _d !== void 0 ? _d : [0, 1, 0, 1];\n            var rightWallColor = (_h = (_e = to.color) !== null && _e !== void 0 ? _e : (_g = ((_f = options.rightWallColor) !== null && _f !== void 0 ? _f : options.wallColor)) === null || _g === void 0 ? void 0 : _g.map(function (index) { return index / 255; })) !== null && _h !== void 0 ? _h : [0, 0, 1, 1];\n            var topColor = (_k = (_j = options.topColor) === null || _j === void 0 ? void 0 : _j.map(function (index) { return index / 255; })) !== null && _k !== void 0 ? _k : [1, 0, 0, 1];\n            var bottomColor = (_m = (_l = options.bottomColor) === null || _l === void 0 ? void 0 : _l.map(function (index) { return index / 255; })) !== null && _m !== void 0 ? _m : [0, 0, 0, 1];\n            var endBlockColor = (_r = (_o = to.color) !== null && _o !== void 0 ? _o : (_q = ((_p = options.endBlockColor) !== null && _p !== void 0 ? _p : options.wallColor)) === null || _q === void 0 ? void 0 : _q.map(function (index) { return index / 255; })) !== null && _r !== void 0 ? _r : [0, 0, 0, 1];\n            var startBlockColor = (_v = (_s = to.color) !== null && _s !== void 0 ? _s : (_u = ((_t = options.startBlockColor) !== null && _t !== void 0 ? _t : options.wallColor)) === null || _u === void 0 ? void 0 : _u.map(function (index) { return index / 255; })) !== null && _v !== void 0 ? _v : [0, 0, 0, 1];\n            if (distance > breakingPoint)\n                break;\n            if (breakingPoint < (distance + to.distance))\n                pointFraction = Math.max(0, Math.min((breakingPoint - to.distanceStart) / to.distance, 1));\n            var difference = {\n                x: (to.x - from.x),\n                y: (to.y - from.y)\n            };\n            var from3 = vec3.fromValues(from.y, from.x, fromElevation);\n            var to3 = vec3.fromValues(from.y + (difference.y * pointFraction), from.x + (difference.x * pointFraction), toElevation);\n            var direction = vec3.sub(vec3.create(), to3, from3);\n            var perpendicular = vec3.normalize(vec3.create(), [-direction[1], direction[0], 0]);\n            var halfWidth = ((_w = options.wallWidth) !== null && _w !== void 0 ? _w : .1) / 2;\n            var topVertices = [\n                vec3.add(vec3.create(), from3, vec3.scale(vec3.create(), perpendicular, halfWidth)),\n                vec3.add(vec3.create(), to3, vec3.scale(vec3.create(), perpendicular, halfWidth))\n            ];\n            var bottomVertices = [\n                vec3.sub(vec3.create(), from3, vec3.scale(vec3.create(), perpendicular, halfWidth)),\n                vec3.sub(vec3.create(), to3, vec3.scale(vec3.create(), perpendicular, halfWidth))\n            ];\n            // the main tunnel\n            {\n                // left wall\n                positions.push(bottomVertices[0][0], // back left Y (bottom)\n                0.0, bottomVertices[0][1], // back left X (bottom)\n                bottomVertices[0][0], // back left Y (top)\n                fromElevation, bottomVertices[0][1], // back left X (top)\n                bottomVertices[1][0], // front left Y (top)\n                toElevation, bottomVertices[1][1], // front left X (top)\n                bottomVertices[1][0], // front left Y (bottom)\n                0.0, bottomVertices[1][1] // front left X (bottom)\n                );\n                // right wall\n                positions.push(topVertices[0][0], // back right Y (bottom)\n                0.0, topVertices[0][1], // back right X (bottom)\n                topVertices[0][0], // back right Y (top)\n                fromElevation, topVertices[0][1], // back right X (top)\n                topVertices[1][0], // front right Y (top)\n                toElevation, topVertices[1][1], // front right X (top)\n                topVertices[1][0], // front right Y (bottom)\n                0.0, topVertices[1][1] // front right X (bottom)\n                );\n                // top face\n                positions.push(topVertices[0][0], // back right Y\n                topVertices[0][2], topVertices[0][1], // back right X\n                topVertices[1][0], // top right Y\n                topVertices[1][2], topVertices[1][1], // top right X\n                bottomVertices[1][0], // top left Y\n                bottomVertices[1][2], bottomVertices[1][1], // top left X,\n                bottomVertices[0][0], // back left Y\n                bottomVertices[0][2], bottomVertices[0][1] // back left X\n                );\n                // bottom face\n                positions.push(topVertices[0][0], // back right Y\n                -0.001, topVertices[0][1], // back right X\n                topVertices[1][0], // top right Y\n                -0.001, topVertices[1][1], // top right X\n                bottomVertices[1][0], // top left Y\n                -0.001, bottomVertices[1][1], // top left X,\n                bottomVertices[0][0], // back left Y\n                -0.001, bottomVertices[0][1] // back left X\n                );\n                faceColors.push.apply(faceColors, [\n                    leftWallColor,\n                    rightWallColor,\n                    topColor,\n                    bottomColor // bottom face\n                ]);\n                indices.push.apply(indices, ([\n                    0, 1, 2,\n                    0, 2, 3,\n                    4, 5, 6,\n                    4, 6, 7,\n                    8, 9, 10,\n                    8, 10, 11,\n                    12, 13, 14,\n                    12, 14, 15, // bottom\n                ].map(function (number) { return indexForIndices + number; })));\n                indexForIndices += 16;\n            }\n            to.verticles = {\n                frontRightX: topVertices[1][1],\n                frontRightY: topVertices[1][0],\n                frontRightZ: topVertices[1][2],\n                frontLeftX: bottomVertices[1][1],\n                frontLeftY: bottomVertices[1][0],\n                frontLeftZ: bottomVertices[1][2]\n            };\n            // the connecting tunnel\n            if (from.verticles) {\n                positions.push(\n                // left face\n                from.verticles.frontLeftY, // back left Y (bottom)\n                0.0, from.verticles.frontLeftX, // back left X (bottom)\n                from.verticles.frontLeftY, // back left Y (top)\n                from.verticles.frontLeftZ, from.verticles.frontLeftX, // back left X (top)\n                bottomVertices[0][0], // front left Y (top)\n                bottomVertices[0][2], bottomVertices[0][1], // front left X (top)\n                bottomVertices[0][0], // front left Y (bottom)\n                0.0, bottomVertices[0][1] // front left X (bottom)\n                );\n                positions.push(\n                // right face\n                from.verticles.frontRightY, // back right Y (bottom)\n                0.0, from.verticles.frontRightX, // back right X (bottom)\n                from.verticles.frontRightY, // back right Y (top)\n                from.verticles.frontRightZ, from.verticles.frontRightX, // back right X (top)\n                topVertices[0][0], // front right Y (top)\n                topVertices[0][2], topVertices[0][1], // front right X (top)\n                topVertices[0][0], // front right Y (bottom)\n                0.0, topVertices[0][1] // front right X (bottom)\n                );\n                positions.push(from.verticles.frontRightY, // back right Y\n                from.verticles.frontRightZ, from.verticles.frontRightX, // back right X\n                topVertices[0][0], // top right Y\n                topVertices[0][2], topVertices[0][1], // top right X\n                bottomVertices[0][0], // top left Y\n                bottomVertices[0][2], bottomVertices[0][1], // top left X,\n                from.verticles.frontLeftY, // back left Y\n                from.verticles.frontLeftZ, from.verticles.frontLeftX // back left X\n                );\n                // bottom face\n                positions.push(from.verticles.frontRightY, // back right Y\n                -0.001, from.verticles.frontRightX, // back right X\n                topVertices[0][0], // top right Y\n                -0.001, topVertices[0][1], // top right X\n                bottomVertices[0][0], // top left Y\n                -0.001, bottomVertices[0][1], // top left X,\n                from.verticles.frontLeftY, // back left Y\n                -0.001, from.verticles.frontLeftX // back left X\n                );\n                faceColors.push.apply(faceColors, [\n                    leftWallColor,\n                    rightWallColor,\n                    topColor,\n                    bottomColor // bottom face\n                ]);\n                indices.push.apply(indices, ([\n                    0, 1, 2,\n                    0, 2, 3,\n                    4, 5, 6,\n                    4, 6, 7,\n                    8, 9, 10,\n                    8, 10, 11,\n                    12, 13, 14,\n                    12, 14, 15, // bottom\n                ].map(function (number) { return indexForIndices + number; })));\n                indexForIndices += 16;\n            }\n            if (index === path.points.length - 1) {\n                // final wall\n                positions.push(\n                // left face\n                topVertices[1][0], // back left Y (bottom)\n                0.0, topVertices[1][1], // back left X (bottom)\n                topVertices[1][0], // back left Y (top)\n                toElevation, topVertices[1][1], // back left X (top)\n                bottomVertices[1][0], // front left Y (top)\n                toElevation, bottomVertices[1][1], // front left X (top)\n                bottomVertices[1][0], // front left Y (bottom)\n                0.0, bottomVertices[1][1] // front left X (bottom)\n                );\n                faceColors.push.apply(faceColors, [\n                    endBlockColor\n                ]);\n                indices.push.apply(indices, ([\n                    0, 1, 2,\n                    0, 2, 3, // front\n                ].map(function (number) { return indexForIndices + number; })));\n                indexForIndices += 4;\n            }\n            else if (index === 1) {\n                // initial wall\n                positions.push(\n                // left face\n                bottomVertices[0][0], // back left Y (bottom)\n                0.0, bottomVertices[0][1], // back left X (bottom)\n                bottomVertices[0][0], // back left Y (top)\n                from.z, bottomVertices[0][1], // back left X (top)\n                topVertices[0][0], // front left Y (top)\n                from.z, topVertices[0][1], // front left X (top)\n                topVertices[0][0], // front left Y (bottom)\n                0.0, topVertices[0][1] // front left X (bottom)\n                );\n                faceColors.push.apply(faceColors, [\n                    startBlockColor\n                ]);\n                indices.push.apply(indices, ([\n                    0, 1, 2,\n                    0, 2, 3, // front\n                ].map(function (number) { return indexForIndices + number; })));\n                indexForIndices += 4;\n            }\n        }\n        var positionBuffer = buffers_1.RendererBuffers.initPositionBuffer(gl, positions);\n        var colorBuffer = buffers_1.RendererBuffers.initColorBuffer(gl, faceColors);\n        var indexBuffer = buffers_1.RendererBuffers.initIndexBuffer(gl, indices);\n        return {\n            verticles: positions.length / 2,\n            position: positionBuffer,\n            color: colorBuffer,\n            indices: indexBuffer,\n        };\n    };\n    return RendererPathModel;\n}());\nexports.RendererPathModel = RendererPathModel;\n;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RendererScene = void 0;\nvar RendererScene = /** @class */ (function () {\n    function RendererScene() {\n    }\n    RendererScene.drawScene = function (gl, programInfo, bufferers, options, deltas, matrix) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n        if ((_a = options.autoClear) !== null && _a !== void 0 ? _a : true) {\n            gl.clearColor(0.0, 0.0, 0.0, 0.0); // Clear to black, fully opaque\n            gl.clearDepth(1.0); // Clear everything\n            // Clear the canvas before we start drawing on it.\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        }\n        gl.enable(gl.DEPTH_TEST); // Enable depth testing\n        gl.depthFunc(gl.LEQUAL); // Near things obscure far things\n        // Create a perspective matrix, a special matrix that is\n        // used to simulate the distortion of perspective in a camera.\n        // Our field of view is 45 degrees, with a width/height\n        // ratio that matches the display size of the canvas\n        // and we only want to see objects between 0.1 units\n        // and 100 units away from the camera.\n        var fieldOfView = (((_b = options.cameraFov) !== null && _b !== void 0 ? _b : 45) * Math.PI) / 180; // in radians\n        var aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\n        var zNear = 0.1;\n        var zFar = 1000.0;\n        var projectionMatrix = mat4.create();\n        if ((_c = options.keepPerspectiveProjection) !== null && _c !== void 0 ? _c : true)\n            mat4.perspective(projectionMatrix, fieldOfView, aspect, zNear, zFar);\n        // note: glmatrix.js always has the first argument\n        // as the destination to receive the result.\n        //mat4.perspective(projectionMatrix, fieldOfView, aspect, zNear, zFar);\n        // Set the drawing position to the \"identity\" point, which is\n        // the center of the scene.\n        var modelViewMatrix = mat4.create();\n        if (matrix) {\n            // Convert the provided matrix values into an array\n            var matrixValues = [\n                matrix[0], matrix[1], matrix[2], matrix[3],\n                matrix[4], matrix[5], matrix[6], matrix[7],\n                matrix[8], matrix[9], matrix[10], matrix[11],\n                matrix[12], matrix[13], matrix[14], matrix[15],\n            ];\n            // Create a mat4 object from the matrix values\n            var transformationMatrix = mat4.fromValues.apply(null, matrixValues);\n            // Multiply the camera's view matrix with the transformation matrix\n            mat4.multiply(modelViewMatrix, modelViewMatrix, transformationMatrix);\n            // Now the camera's view matrix is transformed by the provided matrix\n        }\n        mat4.rotate(modelViewMatrix, modelViewMatrix, 0 * (180 / Math.PI), [0, 0, 1]);\n        // Now move the drawing position a bit to where we want to\n        // start drawing the square.\n        mat4.translate(modelViewMatrix, // destination matrix\n        modelViewMatrix, // matrix to translate\n        (_d = options.cameraTranslation) !== null && _d !== void 0 ? _d : [0.0, 0.0, -25.0]);\n        mat4.rotate(modelViewMatrix, modelViewMatrix, ((_f = (_e = options.cameraRotation) === null || _e === void 0 ? void 0 : _e[1]) !== null && _f !== void 0 ? _f : 0) + (deltas.y * 0.01), [1, 0, 0]);\n        mat4.rotate(modelViewMatrix, modelViewMatrix, ((_h = (_g = options.cameraRotation) === null || _g === void 0 ? void 0 : _g[0]) !== null && _h !== void 0 ? _h : 0) + (deltas.x * 0.01), [0, 1, 0]);\n        mat4.rotate(modelViewMatrix, modelViewMatrix, ((_k = (_j = options.cameraRotation) === null || _j === void 0 ? void 0 : _j[2]) !== null && _k !== void 0 ? _k : 0), [0, 0, 1]);\n        for (var _i = 0, bufferers_1 = bufferers; _i < bufferers_1.length; _i++) {\n            var buffers = bufferers_1[_i];\n            // Tell WebGL how to pull out the positions from the position\n            // buffer into the vertexPosition attribute.\n            this.setPositionAttribute(gl, buffers, programInfo);\n            this.setColorAttribute(gl, buffers, programInfo);\n            // Tell WebGL which indices to use to index the vertices\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffers.indices);\n            // Tell WebGL to use our program when drawing\n            gl.useProgram(programInfo.program);\n            // Set the shader uniforms\n            gl.uniformMatrix4fv(programInfo.uniformLocations.projectionMatrix, false, projectionMatrix);\n            gl.uniformMatrix4fv(programInfo.uniformLocations.modelViewMatrix, false, modelViewMatrix);\n            {\n                var vertexCount = buffers.verticles;\n                var type = gl.UNSIGNED_SHORT;\n                var offset = 0;\n                gl.drawElements(gl.TRIANGLES, vertexCount, type, offset);\n            }\n        }\n    };\n    ;\n    RendererScene.setPositionAttribute = function (gl, buffers, programInfo) {\n        var numComponents = 3;\n        var type = gl.FLOAT; // the data in the buffer is 32bit floats\n        var normalize = false; // don't normalize\n        var stride = 0; // how many bytes to get from one set of values to the next\n        // 0 = use type and numComponents above\n        var offset = 0; // how many bytes inside the buffer to start from\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffers.position);\n        gl.vertexAttribPointer(programInfo.attribLocations.vertexPosition, numComponents, type, normalize, stride, offset);\n        gl.enableVertexAttribArray(programInfo.attribLocations.vertexPosition);\n    };\n    ;\n    RendererScene.setColorAttribute = function (gl, buffers, programInfo) {\n        var numComponents = 4;\n        var type = gl.FLOAT;\n        var normalize = false;\n        var stride = 0;\n        var offset = 0;\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffers.color);\n        gl.vertexAttribPointer(programInfo.attribLocations.vertexColor, numComponents, type, normalize, stride, offset);\n        gl.enableVertexAttribArray(programInfo.attribLocations.vertexColor);\n    };\n    return RendererScene;\n}());\nexports.RendererScene = RendererScene;\n;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RendererWebGL = void 0;\nvar RendererWebGL = /** @class */ (function () {\n    function RendererWebGL() {\n    }\n    RendererWebGL.initializeProgram = function (context) {\n        // Vertex shader program\n        var vsSource = \"\\n            attribute vec4 aVertexPosition;\\n            attribute vec4 aVertexColor;\\n\\n            uniform mat4 uModelViewMatrix;\\n            uniform mat4 uProjectionMatrix;\\n\\n            varying lowp vec4 vColor;\\n\\n            void main(void) {\\n                gl_Position = uProjectionMatrix * uModelViewMatrix * aVertexPosition;\\n                vColor = aVertexColor;\\n            }\\n        \";\n        // Fragment shader program\n        var fsSource = \"\\n            varying lowp vec4 vColor;\\n\\n            void main(void) {\\n                gl_FragColor = vColor;\\n            }\\n        \";\n        // Initialize a shader program; this is where all the lighting\n        // for the vertices and so forth is established.\n        var shaderProgram = RendererWebGL.initShaderProgram(context, vsSource, fsSource);\n        if (!shaderProgram)\n            throw new Error(\"shader program\");\n        // Collect all the info needed to use the shader program.\n        // Look up which attributes our shader program is using\n        // for aVertexPosition, aVertexColor and also\n        // look up uniform locations.\n        return {\n            program: shaderProgram,\n            attribLocations: {\n                vertexPosition: context.getAttribLocation(shaderProgram, \"aVertexPosition\"),\n                vertexColor: context.getAttribLocation(shaderProgram, \"aVertexColor\"),\n            },\n            uniformLocations: {\n                projectionMatrix: context.getUniformLocation(shaderProgram, \"uProjectionMatrix\"),\n                modelViewMatrix: context.getUniformLocation(shaderProgram, \"uModelViewMatrix\"),\n            },\n        };\n    };\n    ;\n    RendererWebGL.initShaderProgram = function (gl, vsSource, fsSource) {\n        var vertexShader = this.loadShader(gl, gl.VERTEX_SHADER, vsSource);\n        if (!vertexShader)\n            throw new Error(\"vertex shader\");\n        var fragmentShader = this.loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\n        if (!fragmentShader)\n            throw new Error(\"fragment shader\");\n        // Create the shader program\n        var shaderProgram = gl.createProgram();\n        if (!shaderProgram)\n            throw new Error(\"shader program\");\n        gl.attachShader(shaderProgram, vertexShader);\n        gl.attachShader(shaderProgram, fragmentShader);\n        gl.linkProgram(shaderProgram);\n        // If creating the shader program failed, alert\n        if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n            alert(\"Unable to initialize the shader program: \".concat(gl.getProgramInfoLog(shaderProgram)));\n            return null;\n        }\n        return shaderProgram;\n    };\n    RendererWebGL.loadShader = function (gl, type, source) {\n        var shader = gl.createShader(type);\n        if (!shader)\n            throw new Error(\"shader\");\n        // Send the source to the shader object\n        gl.shaderSource(shader, source);\n        // Compile the shader program\n        gl.compileShader(shader);\n        // See if it compiled successfully\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            alert(\"An error occurred compiling the shaders: \".concat(gl.getShaderInfoLog(shader)));\n            gl.deleteShader(shader);\n            return null;\n        }\n        return shader;\n    };\n    return RendererWebGL;\n}());\nexports.RendererWebGL = RendererWebGL;\n;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar RouteWebGLOverlayView = /** @class */ (function () {\n    function RouteWebGLOverlayView(renderer, paths) {\n        var overlay = new google.maps.WebGLOverlayView();\n        overlay.onAdd = overlay.onStateUpdate = overlay.onContextLost = overlay.onRemove = function () { };\n        overlay.onContextRestored = function (_a) {\n            var gl = _a.gl;\n            renderer.setOptions({\n                autoClear: false,\n                center: false,\n                keepPerspectiveProjection: false\n            });\n            renderer.setupContext(gl);\n        };\n        overlay.onDraw = function (_a) {\n            var gl = _a.gl, transformer = _a.transformer;\n            if (!renderer.paths.length) {\n                renderer.setPaths(paths, null, true, function (point, options) {\n                    var matrix = transformer.fromLatLngAltitude({\n                        lat: point.latitude,\n                        lng: point.longitude,\n                        altitude: 0,\n                    });\n                    var inverseMatrix = mat4.create();\n                    var homogeneousCoord = vec4.fromValues(0, 0, 0, 1);\n                    var result = vec4.create();\n                    mat4.invert(inverseMatrix, matrix);\n                    vec4.transformMat4(result, homogeneousCoord, inverseMatrix);\n                    return {\n                        x: result[1] / 3 * 2,\n                        y: result[0] / 3 * 2,\n                        z: point.altitude * 20\n                    };\n                });\n            }\n            // Render objects.\n            var matrix = transformer.fromLatLngAltitude({\n                lat: paths[0][0].latitude,\n                lng: paths[0][0].longitude,\n                altitude: 0,\n            });\n            overlay.requestRedraw();\n            renderer.render(gl, performance.now(), matrix);\n        };\n        return overlay;\n    }\n    ;\n    return RouteWebGLOverlayView;\n}());\nexports.default = RouteWebGLOverlayView;\n;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(607);\n"],"names":["__importDefault","this","mod","__esModule","Object","defineProperty","exports","value","RouteWebGLOverlayView","RouteRenderer","renderer_1","default","webglOverlayView_1","Projection","getTileSize","zoomLevel","getMercatorWorldCoordinateProjection","latitude","longitude","tileSize","latitudeToRadians","Math","PI","left","top","log","tan","getPixelCoordinates","leftWorldCoordinate","topWorldCoordinate","pow","projectToPixelCoordinate","point","options","_a","_b","_c","worldCoordinates","projectionZoomLevel","pixelCoordinates","x","y","z","altitude","__assign","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","projection_1","grid_1","path_1","scene_1","webgl_1","Renderer","paths","bufferers","animations","previousAnimationsLength","deltaX","deltaY","previous","setOptions","setupContext","context","programInfo","RendererWebGL","initializeProgram","setPaths","project","projectionFunction","_this","startLeft","NaN","startTop","minimumLeft","maximumLeft","minimumTop","maximumTop","minimumAltitude","maximumAltitude","_i","paths_1","path_2","coordinate","projection","window","isNaN","centerLeft","centerTop","green","red","keepMinimumAltitude","map","path","points","fullDistance","forEach","index","_d","colorMultiplier","keepMinimumPositions","center","distanceX","abs","distanceY","distance","sqrt","distanceStart","verticles","color","elevationGradient","elevationGradientColors","push","getAnimationFrame","now","frame","distanceFraction","elevationFraction","delta","animation","progress","elapsed","fraction","max","min","interval","forwards","repeat","splice","type","registerMouseEvents","canvas","mouseDown","lastMouseX","lastMouseY","addEventListener","event","pageX","pageY","document","body","newX","newY","render","matrix","Error","createBuffers","RendererScene","drawScene","buffers","animationFrame","RendererPathModel","grid","RendererGridModel","RendererBuffers","initPositionBuffer","gl","positions","positionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","initColorBuffer","faceColors","colors","j","c","concat","colorBuffer","initIndexBuffer","indices","indexBuffer","ELEMENT_ARRAY_BUFFER","Uint16Array","buffers_1","minX","maxX","minY","maxY","_e","padding","gridPadding","gridColor","position","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","_t","_u","_v","_w","indexForIndices","breakingPoint","from","to","fromElevation","toElevation","pointFraction","leftWallColor","wallColor","rightWallColor","topColor","bottomColor","endBlockColor","startBlockColor","difference","from3","vec3","fromValues","to3","direction","sub","create","perpendicular","normalize","halfWidth","wallWidth","topVertices","add","scale","bottomVertices","number","frontRightX","frontRightY","frontRightZ","frontLeftX","frontLeftY","frontLeftZ","deltas","autoClear","clearColor","clearDepth","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","enable","DEPTH_TEST","depthFunc","LEQUAL","fieldOfView","cameraFov","aspect","clientWidth","clientHeight","projectionMatrix","mat4","keepPerspectiveProjection","perspective","modelViewMatrix","matrixValues","transformationMatrix","multiply","rotate","translate","cameraTranslation","cameraRotation","bufferers_1","setPositionAttribute","setColorAttribute","useProgram","program","uniformMatrix4fv","uniformLocations","vertexCount","UNSIGNED_SHORT","drawElements","TRIANGLES","FLOAT","vertexAttribPointer","attribLocations","vertexPosition","enableVertexAttribArray","vertexColor","shaderProgram","initShaderProgram","getAttribLocation","getUniformLocation","vsSource","fsSource","vertexShader","loadShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","alert","getProgramInfoLog","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","renderer","overlay","google","maps","WebGLOverlayView","onAdd","onStateUpdate","onContextLost","onRemove","onContextRestored","onDraw","transformer","fromLatLngAltitude","lat","lng","inverseMatrix","homogeneousCoord","vec4","result","invert","transformMat4","requestRedraw","performance","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","module","__webpack_modules__"],"sourceRoot":""}